||| Copyright (C) 1998-2009, Sumisho Computer Systems Corp. All Rights Reserved.

||| Licensed under the Apache License, Version 2.0 (the "License");
||| you may not use this file except in compliance with the License.
||| You may obtain a copy of the License at
||| 
|||     http://www.apache.org/licenses/LICENSE-2.0
||| 
||| Unless required by applicable law or agreed to in writing, software
||| distributed under the License is distributed on an "AS IS" BASIS,
||| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
||| See the License for the specific language governing permissions and
||| limitations under the License.

|||
||| @authors Yoshitaka Fukuta
|||


{doc-next
    {purpose {param g} に含まれる各グラフィックにプロシージャを適用します。}
    {parameter action-proc,
        適用するプロシージャ。
    }
    {parameter prune-proc,
        {ctext null} でない場合は、各グラフィックとその子孫をトラバースに含めるかどうかを判断するために、
        このプロシージャが各グラフィックに適用されます。
        このプロシージャが {ctext true} と評価された場合、サブツリーは含まれません。
    }
    {parameter ensure-ui-generated?,
        {ctext true} の場合、{docref MultiUIControlFrame} に対して {docref ControlUI}
        の生成を強制し、このプロシージャがその子孫をトラバースできるようにします。
        既定値は {ctext false} です。
    }
}
{define-proc public {walk-graphics
                        g:Graphic,
                        action-proc:{proc-type {Graphic}:void},
                        prune-proc:#{proc-type {Graphic}:bool} = null,
                        ensure-ui-generated?:bool = false
                    }:void
    {if-non-null prune-proc then
        {if {prune-proc g} then
            {return}
        }
    }
    {action-proc g}
    {type-switch g
     case box:Box do
        {if ensure-ui-generated? then
            {type-switch g
             case mcf:MultiUIControlFrame do
                || ui-object getter を呼び出して ControlUI を生成する
                def ui = mcf.ui-object
            }
        }
        {for child in box.ordered-children do
            {walk-graphics
                child,
                action-proc,
                prune-proc = prune-proc,
                ensure-ui-generated? = ensure-ui-generated?
            }
        }
    }
}

{doc-next
    {purpose
        {param root} に含まれるグラフィックの中から {param filter} が {ctext true}
        となる最初のグラフィックを返します。
        {param filter} が {ctext true} を返さない場合、戻り値は {ctext null} となります。
    }
}
{define-proc public {find-child
                        root:Graphic,
                        filter:{proc-type {Graphic}:bool},
                        ensure-ui-generated?:bool = false
                    }:#Graphic
    let found-child:#Graphic = null
    {walk-graphics
        root,
        {fn g =>
            {if {filter g} then
                set found-child = g
            }
        },
        prune-proc =
            {fn => (found-child != null)},
        ensure-ui-generated? = ensure-ui-generated?
    }
    {return found-child}
}
