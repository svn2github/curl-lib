||| Copyright (C) 1998-2009, Sumisho Computer Systems Corp. All Rights Reserved.

||| Licensed under the Apache License, Version 2.0 (the "License");
||| you may not use this file except in compliance with the License.
||| You may obtain a copy of the License at
||| 
|||     http://www.apache.org/licenses/LICENSE-2.0
||| 
||| Unless required by applicable law or agreed to in writing, software
||| distributed under the License is distributed on an "AS IS" BASIS,
||| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
||| See the License for the specific language governing permissions and
||| limitations under the License.

|||
||| @authors Hitoshi Okada
|||

|| (since 0.7)

{doc-next
    {purpose 引数から適切なタプル型を判断し値を返すマクロです。}
    {details
        引数の数から{docref Tuple2-of}, {docref Tuple3-of}, {docref Tuple4-of},
        {docref Tuple5-of}のいずれかを判断し、引数の値から型を判断し、適切なタプル型を返します。
        {curl-code
            || 以下は{{Tuple2-of String, int} "ABC", 100}と同等。
            def t2 = {tuple "ABC", 100}

            || 以下は{{Tuple3-of String, int, double, bool, bool} "ABC", 100, 10.5, true, false}と同等。
            def t5 = {tuple "ABC", 100, 10.5, true, false}
        }
        {notes 引数から2から5個を指定します。}
    }
}
{define-syntax public {tuple
                          ?args:{bounded-comma-sequence 2, 5, ?:expression}
                      }
    def types = {{FastArray-of Type} max-size = args.size}
    {for t in args do
        {types.append {syntax-env.type-of t}}
    }
    {return
        {switch args.size
         case 2 do
            {expand-template
                {{Tuple2-of
                     ?{Literal types[0]},
                     ?{Literal types[1]}
                 } ?args}
            }
         case 3 do
            {expand-template
                {{Tuple3-of
                     ?{Literal types[0]},
                     ?{Literal types[1]},
                     ?{Literal types[2]}
                 } ?args}
            }
         case 4 do
            {expand-template
                {{Tuple4-of
                     ?{Literal types[0]},
                     ?{Literal types[1]},
                     ?{Literal types[2]},
                     ?{Literal types[3]}
                 } ?args}
            }
         case 5 do
            {expand-template
                {{Tuple5-of
                     ?{Literal types[0]},
                     ?{Literal types[1]},
                     ?{Literal types[2]},
                     ?{Literal types[3]},
                     ?{Literal types[4]}
                 } ?args}
            }
         else
            || NOTE: The syntax error might happen.
            {unreachable}
        }
    }
}

