||| Copyright (C) 1998-2009, Sumisho Computer Systems Corp. All Rights Reserved.

||| Licensed under the Apache License, Version 2.0 (the "License");
||| you may not use this file except in compliance with the License.
||| You may obtain a copy of the License at
||| 
|||     http://www.apache.org/licenses/LICENSE-2.0
||| 
||| Unless required by applicable law or agreed to in writing, software
||| distributed under the License is distributed on an "AS IS" BASIS,
||| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
||| See the License for the specific language governing permissions and
||| limitations under the License.

|||
||| @authors Hitoshi Okada
|||

{import TextInputStream, TextOutputStream from CURL.IO.STREAM}
{import StringUtil from COM.CURL.LIB.LANG}

{doc-next
    {purpose javaの.propertiesファイルフォーマットを利用するクラス}
}
{define-class public open Properties
  {inherits {HashTable-of String, String}}

  {doc-next
    {purpose 空のPropertiesオブジェクトを生成します。}
  }
  {constructor public {default}
    {construct-super}
  }

  {doc-next
    {purpose PropertiesオブジェクトからPropertiesオブジェクトを生成します。}
  }
  {factory public {from-properties
                      props:Properties
                  }:Properties
    def this = {Properties}
    {for v key k in props do
        {this.set k, v}
    }
    {return this}
  }

  {doc-next
    {purpose {docref TextInputStream}からプロパティを読み込みます。}
  }
  {method public open {load in:TextInputStream}:void
    {while not in.end-of-stream? do
        def (k, v) =
            {StringUtil.separate-by-char {{in.read-line}.to-String}, '='}
        def key = {StringUtil.trim k}
        def value = {StringUtil.trim v} 
        || except comment or new line code
        {if not ({key.prefix? "#"} or (key.size == 0 and value.size == 0)) then
            {self.set key, value}
        }
    }
  }

  {doc-next
    {purpose {docref TextInputStream}へプロパティを書き出します。}
  }
  {method public open {store out:TextOutputStream}:void
    {for v key k in self do
        {out.write-one-string k & '=' & v & StringUtil.NEW-LINE-CODE}
    }
  }

||--  {method public open {get-property key:String}:any
||--    {return self[key] asa String}
||--  }
||--
||--  {method public open {set-property key:String, value:any}:void
||--    set self[key] = value asa String
||--  }
}
