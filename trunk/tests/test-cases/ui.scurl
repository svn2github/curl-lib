||| Copyright (C) 1998-2009, Sumisho Computer Systems Corp. All Rights Reserved.

||| Licensed under the Apache License, Version 2.0 (the "License");
||| you may not use this file except in compliance with the License.
||| You may obtain a copy of the License at
|||
|||     http://www.apache.org/licenses/LICENSE-2.0
|||
||| Unless required by applicable law or agreed to in writing, software
||| distributed under the License is distributed on an "AS IS" BASIS,
||| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
||| See the License for the specific language governing permissions and
||| limitations under the License.

|||
||| @authors D.TIAN
|||

{import * from COM.CURL.LIB.UI}
{import * from CURL.ENGINE.APPLET}

|| test Foo
{define-class public Foo
  field public-get tf-1:String = "value1"
  {getter public {tf-2}:String {return "value2"}}
  field public-get tf-3:int = 1000
  field public td:String = "value3"
  field public-get df:DateTime = {DateTime year=2009, month=9, day=10}
  field public-get cb:String = "xxxxxxx"
}

{define-class public Hoge
  field public-set tf-1:String = ""
  field public-get result-tf-2:String = ""
  {setter public {tf-2 s:String}:void set self.result-tf-2 = s}
  field public-set tf-3:int = 0
  field public td:String = ""
  field public-set df:DateTime = {DateTime year=2009, month=1, day=1}
  field public-set cb:String = ""
}


|| testcases
{TestSuite "COM.CURL.LIB.UI-UTILS",
    {test-case "with-busy-view",
        def cb = {CommandButton}
        def v = {View cb}
        {with-busy-view v do
            {TestCondition.assert not cb.ui-object.enabled?}
        }
        {dispatch-events false}
        {TestCondition.assert cb.ui-object.enabled?}
    },

    {test-case "walk-graphic",
        def root =
            {Frame
                {VBox
                    {TextField name="name1", value="value1"},
                    {TextField name="name2", value="value2"},
                    {Frame
                        {VBox
                            {TextField name="name3"},
                            {TextArea name="name4", value="value4"},
                            {TextField value="value5"}
                        }
                    }
                }
            }
        {walk-graphics
            root,
            {fn g =>
                {if g isa ValueControl then
                    def v = g asa ValueControl
                    {if-non-null name = v.name then
                        {switch name
                         case "name1" do
                            {TestCondition.assert v.value-as-any == "value1"}
                         case "name2" do
                            {TestCondition.assert v.value-as-any == "value2"}
                         case "name3" do
                            {TestCondition.assert v.value-as-any == ""}
                         case "name4" do
                            {TestCondition.assert v.value-as-any == "value4"}
                         else
                            {TestCondition.fail}
                        }
                    }
                }
            }
        }
    },
    
    {test-case "set values of controls",
        def tf1 = {TextField name="tf-1"}
        def tf2 = {TextField name="tf-2"}
        def tf3 = {TextField name="tf-3"}
        def tf4 = {TextField}
        def tf5 = {TextField name="no-name"}
        def tf6 = {TextField name="tf-1"}

        def td = {TextDisplay name="td"}
        def df = {DateField name="df"}
        def cb = {CommandButton name="cb"}
        
        def root-graphic =
            {VBox
                {HBox tf1, tf2, tf3}, {HBox td, tf4, tf5, tf6}, df, cb
            }
        {TestCondition.assert
            tf1.value == "" and
            tf2.value == "" and
            tf3.value == "" and
            tf4.value == "" and
            tf5.value == "" and
            tf6.value == "" and
            td.value == "" and
            df.value == null
        }
        || set values of graphic
        {set-values-to-controls
            {Foo},
            root-graphic,
            set-value-proc =
                {fn v, p, c =>
                    {if p.name == c.name then
                        || NOTE: mostly might need a nullable check
                        {if-non-null value = {p.get-value v} then
                            set c.value-as-any = 
                                {if p.type == int and c.value-type == String then
                                    (value * 3) & ""
                                 else
                                    value
                                }
                        }
                    }
                }
        }
        {TestCondition.assert
            tf1.value == "value1" and
            tf2.value == "value2" and
            tf3.value == "3000" and
            tf4.value == "" and
            tf5.value == "" and
            tf6.value == "value1" and
            td.value == "value3" and
            df.value.info.year == 2009 and
            df.value.info.month == 9 and
            df.value.info.day == 10
        }
||--        || dump
||--        {walk-graphics
||--            root-graphic,
||--            {fn g =>
||--                {if g isa ValueControl then
||--                    def v = g asa ValueControl
||--                    {dump v.name, v.value-type, v.value-as-any}
||--                }
||--            }
||--        }

        def hoge = {Hoge}
        {TestCondition.assert
            hoge.tf-1 == "" and
            hoge.result-tf-2 == "" and
            hoge.tf-3 == 0 and
            hoge.td == "" and
            hoge.df.info.year == 2009 and
            hoge.df.info.month == 1 and
            hoge.df.info.day == 1
        }
        {set-values-from-controls
            root-graphic,
            hoge,
            set-value-proc =
                {fn c, v, p =>
                    {if p.name == c.name then
                        || NOTE: mostly might need a nullable check
                        {if-non-null value = c.value-as-any then
                            {p.set-value v, 
                                {if p.type == int and c.value-type == String then
                                    {(value asa String).to-int}
                                 else
                                    value
                                }
                            }
                        }
                    }
                }
        }
        {TestCondition.assert
            hoge.tf-1 == "value1" and
            hoge.result-tf-2 == "value2" and
            hoge.tf-3 == 3000 and
            hoge.td == "value3" and
            hoge.df.info.year == 2009 and
            hoge.df.info.month == 9 and
            hoge.df.info.day == 10
        }
    }
}

